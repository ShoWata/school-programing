rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAnyAuthenticated() {
    	return request.auth != null;
    }
    
    function isUserAuthenticated(userID) {
    	return isAnyAuthenticated() && userID == request.auth.uid
    }
    
    function adminExists() {
    	return isAnyAuthenticated() && exists(/databases/$(database)/documents/admins/$(request.auth.uid))
    }
    
    function teacherExists() {
    	return isAnyAuthenticated() && exists(/databases/$(database)/documents/teachers/$(request.auth.uid))
    }
    
    function studentExists() {
    	return isAnyAuthenticated() && exists(/databases/$(database)/documents/students/$(request.auth.uid))
    }
    
  	match /lessons/{lesson} {
    
    	match /explanations/{explanation} {
      	allow read: if adminExists() || teacherExists() || studentExists();
        allow write: if adminExists();
        match /contents/{content} {
        	allow read: if adminExists() || teacherExists() || studentExists();
          allow write: if isAnyAuthenticated() && adminExists();
        }
      }
      
      match /exercises/{exercise} {
      	allow read: if adminExists() || teacherExists() || studentExists();
        allow write: if adminExists();
        match /questions/{question} {
        	allow read: if adminExists() || teacherExists() || studentExists();
          allow write: if adminExists();
        }
      }

      match /practices/{practice} {
      	allow read: if adminExists() || teacherExists() || studentExists();
        allow write: if adminExists();
      }
    }

		match /products/{product} {
    	allow read: if adminExists() || teacherExists() || studentExists();
      allow write: if adminExists();
    }
    
    match /admins/{adminID} {
    	allow read, write: if false;
    }
    
    match /teachers/{teacherID} {
      allow read: if isUserAuthenticated(teacherID) || adminExists();
      allow create: if adminExists();
      allow update: if isUserAuthenticated(teacherID);
      allow delete: if adminExists();
    }
    
    match /students/{studentID} {
    	allow read: if isUserAuthenticated(studentID) || adminExists() || teacherExists();
      allow create: if adminExists();
      allow update: if isUserAuthenticated(studentID);
      allow delete: if adminExists();

      match /codes/{code} {
        allow read: if isUserAuthenticated(studentID) || adminExists() || teacherExists();
        allow create: if isUserAuthenticated(studentID);
        allow update: if isUserAuthenticated(studentID);
        allow delete: if isUserAuthenticated(studentID);
      }
    }
  }
}